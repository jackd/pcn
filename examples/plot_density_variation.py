"""
Plot accuracies for different number of input points.

Data for the following can be generated by: training
```python
cd pcn/configs
python -m pcn '$KB_CONFIG/fit' '$PCN_CONFIG/pn2-resnet/large.gin'
python -m pcn '$KB_CONFIG/eval' '$PCN_CONFIG/pn2-resnet/large.gin' \
    --bindings='eval_num_points=32'
python -m pcn '$KB_CONFIG/eval' '$PCN_CONFIG/pn2-resnet/large.gin' \
    --bindings='eval_num_points=64'
python -m pcn '$KB_CONFIG/eval' '$PCN_CONFIG/pn2-resnet/large.gin' \
    --bindings='eval_num_points=64'
```

normalized_accs -> pn2-resnet/large.gin
unnormalized_accs -> pn2-resnet/large-denomralized.gin
weightless_accs -> pn2-resnet/large-weightless.gin
"""
import matplotlib.pyplot as plt
import numpy as np

validation_points = [32, 64, 128, 256, 512, 1024]

normalized_accs = [45.50, 74.72, 83.95, 88.49, 89.59, 90.19]
unnormalized_accs = [48.34, 75.16, 83.31, 87.03, 88.94, 89.67]
weightless_accs = [45.75, 73.46, 82.98, 87.93, 89.63, 89.63]

normalized_nodrop_accs = [4.13, 9.36, 25.93, 61.51, 87.84, 89.91]
unnormalized_nodrop_accs = [4.46, 6.56, 16.49, 57.82, 85.98, 90.64]

log_points = -np.log(validation_points)


def add(accs, label, color, marker, linestyle):
    plt.plot(log_points, accs, color=color, linestyle=linestyle, label=label)
    plt.scatter(log_points, accs, color=color, marker=marker)


add(
    normalized_accs,
    color="b",
    marker="o",
    label="normalized, point-drop",
    linestyle="dashed",
)
add(
    unnormalized_accs,
    color="b",
    marker="x",
    label="not normalized, point-drop",
    linestyle="dotted",
)
add(
    normalized_nodrop_accs,
    color="r",
    marker="o",
    label="normalized, no point-drop",
    linestyle="dashed",
)
add(
    unnormalized_nodrop_accs,
    color="r",
    marker="x",
    label="not normalized, no point-drop",
    linestyle="dotted",
)

plt.xticks(log_points, validation_points)
plt.legend()

plt.ylabel("Accuracy (%)")
plt.xlabel("Points per example")
plt.show()

import kblocks.path

root/cache_dir = @os.path.join()
root/cache_dir/join.a = %family_dir
root/cache_dir/join.p = "cache"

train/cache_dir = @os.path.join()
train/cache_dir/join.a = %root/cache_dir
train/cache_dir/join.p = "train"

validation/cache_dir = @os.path.join()
validation/cache_dir/join.a = %root/cache_dir
validation/cache_dir/join.p = "validation"

kb.data.TFRecordsFactory.compression = %compression
kb.data.RepeatedTFRecordsCache.compression = %compression
train/cache/kb.data.RepeatedTFRecordsCache.num_repeats = %cache_repeats
train/cache/kb.data.RepeatedTFRecordsCache.path = %train/cache_dir

validation/cache = @kb.data.Cache()
validation/cache/kb.data.Cache.factory = @kb.data.TFRecordsFactory()
validation/cache/kb.data.Cache.cache_dir = %validation/cache_dir

train/cache = @if_then_else()
train/cache/if_then_else.cond = %pre_emptible
train/cache/if_then_else.if_true = @kb.data.RandomRepeatedTFRecordsCache()
train/cache/if_then_else.if_false = @kb.data.RepeatedTFRecordsCache()

compression = "GZIP"

# must define:
# - cache_repeats
